CREATE TYPE "role_type" AS ENUM (
  'customer',
  'admin',
  'manager'
);

CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "email" varchar(255) UNIQUE NOT NULL,
  "password_hash" varchar(255) NOT NULL,
  "first_name" varchar(100),
  "last_name" varchar(100),
  "phone" varchar(20),
  "address" text,
  "role" role_type NOT NULL DEFAULT 'customer',
  "created_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "categories" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(100) UNIQUE NOT NULL,
  "slug" varchar(100) UNIQUE NOT NULL,
  "description" text,
  "parent_id" integer,
  "is_active" boolean NOT NULL DEFAULT true,
  "sort_order" integer NOT NULL DEFAULT 0,
  "created_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "publishers" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(255) NOT NULL,
  "website" varchar(255),
  "created_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "authors" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "first_name" varchar(100) NOT NULL,
  "last_name" varchar(100) NOT NULL,
  "biography" text,
  "birth_date" date,
  "death_date" date,
  "nationality" varchar(100),
  "website" varchar(500),
  "created_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "books" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar(255) NOT NULL,
  "isbn" varchar(20) UNIQUE,
  "publisher_id" integer,
  "category_id" integer NOT NULL,
  "price" decimal(10,2) NOT NULL,
  "stock" integer NOT NULL DEFAULT 0,
  "description" text,
  "short_description" text,
  "image" varchar(255),
  "pages" integer,
  "publication_year" integer,
  "popularity" integer NOT NULL DEFAULT 0,
  "created_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "book_authors" (
  "book_id" integer NOT NULL,
  "author_id" integer NOT NULL,
  "created_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "orders" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "status" varchar(50),
  "total_price" decimal(10,2),
  "created_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "order_items" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "order_id" integer NOT NULL,
  "book_id" integer NOT NULL,
  "quantity" integer NOT NULL,
  "price_per_item" decimal(10,2) NOT NULL,
  "total_price" decimal(10,2) NOT NULL,
  "created_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "reviews" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "book_id" integer NOT NULL,
  "rating" integer NOT NULL,
  "title" varchar(255),
  "comment" text,
  "is_verified_purchase" boolean NOT NULL DEFAULT false,
  "created_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP),
  "updated_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "cart_items" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "book_id" integer NOT NULL,
  "quantity" integer NOT NULL DEFAULT 1,
  "added_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE TABLE "wishlist" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" integer NOT NULL,
  "book_id" integer NOT NULL,
  "added_at" datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP)
);

CREATE UNIQUE INDEX ON "book_authors" ("book_id", "author_id");

CREATE UNIQUE INDEX ON "order_items" ("order_id", "book_id");

CREATE UNIQUE INDEX ON "reviews" ("user_id", "book_id");

CREATE UNIQUE INDEX ON "cart_items" ("user_id", "book_id");

CREATE UNIQUE INDEX ON "wishlist" ("user_id", "book_id");

COMMENT ON TABLE "users" IS 'Пользователи магазина';

COMMENT ON TABLE "categories" IS 'Категории книг (включая иерархию через parent_id)';

COMMENT ON TABLE "publishers" IS 'Издатели (используется в books.publisher_id)';

COMMENT ON TABLE "authors" IS 'Авторы книг';

COMMENT ON TABLE "books" IS 'Книги магазина';

COMMENT ON TABLE "book_authors" IS 'Таблица связей многие-ко-многим между books и authors';

COMMENT ON TABLE "orders" IS 'Заказы пользователей';

COMMENT ON TABLE "order_items" IS 'Позиции заказа';

COMMENT ON TABLE "reviews" IS 'Отзывы на книги';

COMMENT ON TABLE "cart_items" IS 'Корзина пользователя';

COMMENT ON TABLE "wishlist" IS 'Список желаний пользователя';

ALTER TABLE "categories" ADD FOREIGN KEY ("parent_id") REFERENCES "categories" ("id");

ALTER TABLE "books" ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("id");

ALTER TABLE "books" ADD FOREIGN KEY ("publisher_id") REFERENCES "publishers" ("id");

ALTER TABLE "book_authors" ADD FOREIGN KEY ("book_id") REFERENCES "books" ("id");

ALTER TABLE "book_authors" ADD FOREIGN KEY ("author_id") REFERENCES "authors" ("id");

ALTER TABLE "orders" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "order_items" ADD FOREIGN KEY ("order_id") REFERENCES "orders" ("id");

ALTER TABLE "order_items" ADD FOREIGN KEY ("book_id") REFERENCES "books" ("id");

ALTER TABLE "reviews" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "reviews" ADD FOREIGN KEY ("book_id") REFERENCES "books" ("id");

ALTER TABLE "cart_items" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "cart_items" ADD FOREIGN KEY ("book_id") REFERENCES "books" ("id");

ALTER TABLE "wishlist" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "wishlist" ADD FOREIGN KEY ("book_id") REFERENCES "books" ("id");
